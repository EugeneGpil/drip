version: '3.8'

services:

  nodejs:
    build:
      context: nodejs
      args:
        - ID_GROUP=${ID_GROUP}
        - ID_USER=${ID_USER}
        - NODE_VERSION=${NODE_VERSION}
    working_dir: /usr/share/nginx/html
    volumes:
      - ../frontend:/usr/share/nginx/html
    environment:
      - HOST=0.0.0.0
      - ENVIRONMENT=${ENVIRONMENT}
    user: "${ID_USER}:${ID_GROUP}"
    restart: unless-stopped

  nodejs_build:
    build:
      context: nodejs
      args:
        - ID_GROUP=${ID_GROUP}
        - ID_USER=${ID_USER}
        - NODE_VERSION=${NODE_VERSION}
    working_dir: /usr/share/nginx/html
    volumes:
      - ../frontend:/usr/share/nginx/html
    environment:
      - HOST=0.0.0.0
    user: "${ID_USER}:${ID_GROUP}"
    command: bash -c "npm ci && npm run build"

  nginx:
    build:
      context: nginx
      args:
        - NGINX_VERSION=${NGINX_VERSION}
    working_dir: /usr/share/nginx/html
    volumes:
      - ../backend:/usr/share/nginx/html
    restart: unless-stopped
    ports:
      - ${PORT_NGINX}:80

  php:
    build:
      context: php
      args:
        - PHP_VERSION=${PHP_VERSION}
        - COMPOSER_VERSION=${COMPOSER_VERSION}
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
        - PORT_XDEBUG=${PORT_XDEBUG}
        - ID_GROUP=${ID_GROUP}
        - ID_USER=${ID_USER}
        - DOCKERHOST=${DOCKERHOST}
    working_dir: /usr/share/nginx/html
    volumes:
      - ../backend:/usr/share/nginx/html
    command: bash -c "service php${PHP_VERSION}-fpm start && tail -F anything"
    environment:
      PHP_IDE_CONFIG: "serverName=${PHP_IDE_CONFIG_SERVER_NAME}"
    restart: unless-stopped

  mysql:
    build:
      context: mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./databases/mysql:/var/lib/mysql
      - ../backend:/usr/share/nginx/html
    ports:
      - ${PORT_MYSQL}:3306
    working_dir: /usr/share/nginx/html

  cron:
    build:
      context: cron
      args:
        - PHP_VERSION=${PHP_VERSION}
    working_dir: /usr/share/nginx/html
    volumes:
      - ../backend:/usr/share/nginx/html
    command: bash -c "cron && tail -F anything"
    restart: unless-stopped
